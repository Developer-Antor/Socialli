{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrar/Documents/React-Project/InstagramFirebase/Instagram/src/Components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar } from \"@material-ui/core\";\nimport MyAvatar from \"../Assets/avatar.png\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport { db } from \"../Firebase/firebase\";\nimport firebase from \"firebase\";\n\nfunction Post({\n  user,\n  username,\n  caption,\n  imageUrl,\n  postId\n}) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(null);\n\n  const postComment = e => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName,\n      text: comment\n    });\n    setComment(\"\");\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"post-avatar\",\n            alt: \"username\",\n            src: MyAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post-image\",\n          src: imageUrl,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-caption\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \" \", caption]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"comments\",\n            children: comments.map(comment => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: comment.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), \" \", comment.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: postComment,\n          className: \"post-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setComment(e.target.value),\n            placeholder: \"Post A Commment\",\n            type: \"text\",\n            value: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !comment,\n            type: \"submit\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"N4paxmpJJKV5RHkDKbGdbeOAQmA=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/abrar/Documents/React-Project/InstagramFirebase/Instagram/src/Components/Post.js"],"names":["Avatar","MyAvatar","React","useState","useEffect","db","firebase","Post","user","username","caption","imageUrl","postId","comments","setComments","comment","setComment","postComment","e","preventDefault","collection","doc","add","timestamp","firestore","FieldValue","serverTimestamp","displayName","text","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","target","value"],"mappings":"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","sourcesContent":["import { Avatar } from \"@material-ui/core\";\nimport MyAvatar from \"../Assets/avatar.png\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport { db } from \"../Firebase/firebase\";\nimport firebase from \"firebase\";\n\nfunction Post({ user, username, caption, imageUrl, postId }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(null);\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      username: user.displayName,\n      text: comment,\n    });\n    setComment(\"\");\n  };\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  return (\n    <div>\n      <div className=\"post-container\">\n        <div className=\"post\">\n          <div className=\"post-header\">\n            <Avatar\n              className=\"post-avatar\"\n              alt=\"username\"\n              src={MyAvatar}\n            ></Avatar>\n            <h3>{username}</h3>\n          </div>\n          <img className=\"post-image\" src={imageUrl} alt=\"\" />\n          <div className=\"post-caption\">\n            <b>{username}</b> {caption}\n          </div>\n          <div className=\"comment-container\">\n            <ul className=\"comments\">\n              {comments.map((comment) => {\n                return (\n                  <li>\n                    <b>{comment.username}</b> {comment.text}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <form onSubmit={postComment} className=\"post-comment\">\n            <input\n              onChange={(e) => setComment(e.target.value)}\n              placeholder=\"Post A Commment\"\n              type=\"text\"\n              value={comment}\n            />\n            <button disabled={!comment} type=\"submit\">\n              Post\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}