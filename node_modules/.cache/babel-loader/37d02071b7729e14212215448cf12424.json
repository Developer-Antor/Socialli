{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrar/Documents/React-Project/InstagramFirebase/Instagram/src/Components/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { db, storage } from \"../Firebase/firebase\";\nimport firebase from \"firebase\";\nimport \"./ImageUpload.css\";\n\nfunction ImageUpload({\n  username\n}) {\n  _s();\n\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        db.collection(\"posts\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n      });\n      setProgress(0);\n      setCaption(\"\");\n      setImage(null);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter A Caption\",\n      onChange: e => setCaption(e.target.value),\n      value: caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"file\",\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Choose Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        onClick: handleUpload,\n        children: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"cJgwRAG89mrMYQxLrpicBhZ5yzY=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/home/abrar/Documents/React-Project/InstagramFirebase/Instagram/src/Components/ImageUpload.js"],"names":["Button","React","useState","db","storage","firebase","ImageUpload","username","caption","setCaption","image","setImage","progress","setProgress","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","value"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,mBAAP;;AACA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrBN,MAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGf,OAAO,CAACgB,GAAR,CAAa,UAASV,KAAK,CAACW,IAAK,EAAjC,EAAoCC,GAApC,CAAwCZ,KAAxC,CAAnB;AACAS,IAAAA,UAAU,CAACI,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ,YAAMZ,QAAQ,GACXY,QAAQ,CAACC,gBAAT,GAA4BD,QAAQ,CAACE,UAAtC,GAAoD,GADtD;AAGAb,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAPH,EAQGe,KAAD,IAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACD,KAXH,EAYE,MAAM;AACJ3B,MAAAA,OAAO,CACJgB,GADH,CACO,QADP,EAEGY,KAFH,CAEStB,KAAK,CAACW,IAFf,EAGGY,cAHH,GAIGC,IAJH,CAISC,GAAD,IAAS;AACbhC,QAAAA,EAAE,CAACiC,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACzBC,UAAAA,SAAS,EAAEjC,QAAQ,CAACkC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADc;AAEzBjC,UAAAA,OAAO,EAAEA,OAFgB;AAGzBkC,UAAAA,QAAQ,EAAEP,GAHe;AAIzB5B,UAAAA,QAAQ,EAAEA;AAJe,SAA3B;AAMD,OAXH;AAYAM,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KA5BH;AA8BD,GAhCD;;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAU,MAAA,KAAK,EAAEC,QAAjB;AAA2B,MAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAGG,CAAD,IAAON,UAAU,CAACM,CAAC,CAACC,MAAF,CAAS2B,KAAV,CAH7B;AAIE,MAAA,KAAK,EAAEnC;AAJT;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,QAAQ,EAAEM;AAAvC;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEI,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA/DQZ,W;;KAAAA,W;AAiET,eAAeA,WAAf","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { db, storage } from \"../Firebase/firebase\";\nimport firebase from \"firebase\";\nimport \"./ImageUpload.css\";\nfunction ImageUpload({ username }) {\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error);\n        alert(error.message);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            db.collection(\"posts\").add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n          });\n        setProgress(0);\n        setCaption(\"\");\n        setImage(null);\n      }\n    );\n  };\n\n  return (\n    <div className=\"img-upload\">\n      <progress value={progress} max=\"100\" />\n      <input\n        type=\"text\"\n        placeholder=\"Enter A Caption\"\n        onChange={(e) => setCaption(e.target.value)}\n        value={caption}\n      />\n      <input id=\"file\" type=\"file\" onChange={handleChange} />\n      <div className=\"button-container\">\n        <label htmlFor=\"file\">Choose Image</label>\n        <Button className=\"button\" onClick={handleUpload}>\n          Upload!\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}